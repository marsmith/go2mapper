webpackJsonp([0],{

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function($, Highcharts, convex, moment, __webpack_provided_L_dot_esri) {// ------------------------------------------------------------------------------
	// ----- NY Go2 Mapper ----------------------------------------------------------
	// ------------------------------------------------------------------------------

	// copyright:   2013 Martyn Smith - USGS NY WSC

	// authors:  Martyn J. Smith - USGS NY WSC

	// purpose:  Web Mapping interface for Go2 Mapper system

	// updates:
	// 04.02.2013 mjs - Created
	// 10.26.2016 mjs - conversion to leaflet.js
	// 10.28.2016 mjs - update styling, mobile friendliness
	// 08.25.2017 mjs - bring all user config to the top
	// 05.28.2019 mjs - updates to graphing, add PHP proxy for AHPS sites
	// 11.01.2019 mjs - add go2fast

	//global variables
	var siteList = {};
	var tripList = {};
	var map;
	var layerLabels, layer, wscLayer, hullLayer, selectLayer, sitesLayer, peopleLayer, lr_NWS_layer, sr_NWS_layer, storm_NWS_layer, reflectivity_NWS_conus_layer;
	var showPeople = false;
	var refreshIntervalId;

	if (true) {
		__webpack_require__(32);
	}

	//instantiate map
	$(document).ready(function () {
		console.log('Application Information: ' + ("development") + ' ' + 'version ' + ("1.0.6"));
		$('#appVersion').html('Application Information: ' + ("development") + ' ' + 'version ' + ("1.0.6"));

		//create map
		map = L.map('mapDiv', { zoomControl: false });

		//add zoom control with your options
		L.control.zoom({ position: 'topright' }).addTo(map);
		L.control.scale().addTo(map);

		//basemap
		layer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/Canvas/World_Light_Gray_Base/MapServer/tile/{z}/{y}/{x}', {
			attribution: 'Tiles &copy; Esri &mdash; Esri, DeLorme, NAVTEQ',
			maxZoom: 16
		}).addTo(map);

		//set initial view
		map.setView([MapY, MapX], MapZoom);

		//define layers
		wscLayer = L.featureGroup().addTo(map);
		hullLayer = L.featureGroup().addTo(map);

		selectLayer = L.featureGroup().addTo(map);
		sitesLayer = L.featureGroup().addTo(map);
		peopleLayer = L.featureGroup().addTo(map);

		lr_NWS_layer = L.layerGroup();
		sr_NWS_layer = L.layerGroup();
		storm_NWS_layer = L.layerGroup();
		reflectivity_NWS_conus_layer = L.layerGroup();

		loadSites();
		loadWSCboundaries();
		addNWSlayers();

		/*  START EVENT HANDLERS */
		$('#centerSelect').on('change', function () {
			var selectedCenter = $('#centerSelect :selected').text();
			$('#tripSelect option[value!="default"]').remove();
			selectCenter(selectedCenter);
		});

		$('#tripSelect').on('change', function () {
			var tripData = { tripName: $('#tripSelect :selected').text(), tripOwner: $('#tripSelect :selected').attr('value'), tripCenter: $('#centerSelect :selected').text() };
			selectTrip(tripData);
		});

		$('#go2typeSelect').on('change', function () {
			var selectedGo2 = $('#go2typeSelect :selected').text();
			selectGo2(selectedGo2);
		});

		$('.basemapBtn').click(function () {
			$('.basemapBtn').removeClass('slick-btn-selection');
			$(this).addClass('slick-btn-selection');
			var baseMap = this.id.replace('btn', '');
			setBasemap(baseMap);
		});

		$('#mobile-main-menu').click(function () {
			$('body').toggleClass('isOpenMenu');
		});

		$('#toggleGo2').click(function () {
			toggleGo2();
		});

		$('#togglePeople').click(function () {
			togglePeople();
		});

		$('.radarBtn').click(function () {
			if ($(this).hasClass('slick-btn-selection')) {
				$(this).removeClass('slick-btn-selection');
				clearRadar();
			} else {
				$('.radarBtn').removeClass('slick-btn-selection');
				$(this).addClass('slick-btn-selection');
				var radarValue = $(this).val();
				toggleRadar(radarValue);
			}
		});

		$('#resetView').click(function () {
			resetView();
		});

		$('#aboutButton').click(function () {
			$('#aboutModal').modal('show');
		});

		sitesLayer.on('click', function (e) {
			showNWISgraph(e);
		});
		/*  END EVENT HANDLERS */
	});

	function getAHPSids() {
		$.getJSON(noaaSitesJSON, function (data) {
			$.each(data, function (usgsSiteID, ahpsID) {
				if (siteList[usgsSiteID]) {
					siteList[usgsSiteID].properties.ahpsID = ahpsID;
				}
			});
		});
	}

	function addNWSlayers() {

		//got extents from: https://radar.weather.gov/ridge/kmzgenerator.php downloading and looking at KML file attributes

		//reflectivity CONUS layer
		reflectivity_NWS_conus_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/Conus/RadarImg/northeast_radaronly.gif', [[35.13102, -81.613834], [49.508061, -66.517938]]));
		//L.esri.dynamicMapLayer({url: 'https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer', layers: [0], opacity : 1, useCors: false}).addTo(map);
		//reflectivity_NWS_conus_layer.addLayer(L.esri.dynamicMapLayer({url: 'https://idpgis.ncep.noaa.gov/arcgis/rest/services/NWS_Observations/radar_base_reflectivity/MapServer', layers: [0], opacity : 1, useCors: false}));
		//reflectivity_NWS_conus_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/Conus/RadarImg/latest_radaronly.gif',[[21.652538062803, -127.620375523875420], [50.406626367301044, -66.517937876818]]));

		//long range state composite
		lr_NWS_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/RadarImg/N0Z/ENX_N0Z_0.gif', [[38.578726, -78.420367], [46.578726, -69.693094]]));
		lr_NWS_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/RadarImg/N0Z/BGM_N0Z_0.gif', [[38.193727, -80.341364], [46.193727, -71.614092]]));
		lr_NWS_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/RadarImg/N0Z/BUF_N0Z_0.gif	', [[38.941729, -83.093363], [46.941729, -74.36609]]));
		lr_NWS_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/RadarImg/N0Z/TYX_N0Z_0.gif', [[39.748728, -80.036364], [47.748728, -71.309091]]));
		lr_NWS_layer.addLayer(L.imageOverlay('https://radar.weather.gov/ridge/RadarImg/N0Z/OKX_N0Z_0.gif', [[36.858728, -77.220362], [44.858728, -68.493089]]));

		//short range state composite
		sr_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/N0R/ENX_N0R_0.gif', [[39.894591, -76.989871], [45.267637, -71.128366]]));
		sr_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/N0R/BGM_N0R_0.gif', [[39.526025, -78.893004], [44.866266, -73.067287]]));
		sr_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/N0R/BUF_N0R_0.gif', [[40.241795, -81.680043], [45.646381, -75.78413]]));
		sr_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/N0R/TYX_N0R_0.gif', [[41.012603, -78.662387], [46.48944, -72.687656]]));
		sr_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/N0R/OKX_N0R_0.gif', [[38.245599, -75.712675], [43.476892, -70.00581]]));

		//storm total precip
		storm_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/NTP/ENX_NTP_0.gif', [[39.894178, -76.99032], [45.268049, -71.127915]]));
		storm_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/NTP/BGM_NTP_0.gif', [[39.52562, -78.893445], [44.866669, -73.066846]]));
		storm_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/NTP/BUF_NTP_0.gif', [[40.241382, -81.680491], [45.646793, -75.78368]]));
		storm_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/NTP/TYX_NTP_0.gif', [[41.01219, -78.662836], [46.489851, -72.687205]]));
		storm_NWS_layer.addLayer(L.imageOverlay(' https://radar.weather.gov/ridge/RadarImg/NTP/OKX_NTP_0.gif', [[38.245202, -75.713107], [43.477288, -70.005377]]));
	}

	function showNWISgraph(e) {
		if (e.layer.properties.siteType === 'sw' || e.layer.properties.siteType === 'gw') {
			//var parameterCodes = '00060,72019,62619';
			//var parameterCodes = '00060,62614,62615,62619,72214,72264,72019';
			var parameterCodes = '00060,00065,62614,62615,62619,72214,72264,72019';
			var timePeriod = 'P7D';
			$.getJSON('https://staging.waterservices.usgs.gov/nwis/iv/?format=nwjson&sites=' + e.layer.properties.siteID + '&parameterCd=' + parameterCodes + '&period=' + timePeriod, function (data) {

				if (!data.data || data.data[0].time_series_data.length <= 0) {
					setTimeout(function () {
						$('#graphLoader').hide();
					}, 500);
					console.log('Found an NWIS site, but it had no data in waterservices: ', e.layer.properties.siteID);

					return;
				}
				var graphData = [];

				console.log('NWIS data:', data);

				//set labels
				var yLabel = '';
				var pointFormat = '';
				var dischargeFlag = false;
				var series = {};

				$.each(data.data, function (index, seriesData) {

					if (seriesData.parameter_name.indexOf('Discharge') !== -1) {
						dischargeFlag = true;
						yLabel = 'Discharge, cfs';
						pointFormat = 'Discharge: {point.y} cfs';

						series = {
							tooltip: {
								pointFormat: pointFormat
							},
							showInLegend: false,
							data: seriesData.time_series_data,
							name: seriesData.parameter_name
						};
						graphData.push(series);
					} else if (seriesData.parameter_name.indexOf('Elevation') !== -1) {
						seriesData.parameter_name += ', ft';
						if (seriesData.loc_web_ds.length > 0) seriesData.parameter_name += ' (' + seriesData.loc_web_ds + ')';else yLabel = seriesData.parameter_name;
						pointFormat = seriesData.parameter_name + ': {point.y}';

						series = {
							tooltip: {
								pointFormat: pointFormat
							},
							showInLegend: false,
							data: seriesData.time_series_data,
							name: seriesData.parameter_name
						};
						graphData.push(series);
					} else if (seriesData.parameter_name === 'Water level, depth LSD') {
						yLabel = 'Elevation, ft';
						pointFormat = 'Elevation: {point.y} ft';

						series = {
							tooltip: {
								pointFormat: pointFormat
							},
							showInLegend: false,
							data: seriesData.time_series_data,
							name: seriesData.parameter_name
						};
						graphData.push(series);
					}

					//only put gage height i
					else if (seriesData.parameter_name.indexOf('Gage height') !== -1 && !dischargeFlag) {

							seriesData.parameter_name += ', ft';
							if (seriesData.loc_web_ds.length > 0) seriesData.parameter_name += ' (' + seriesData.loc_web_ds + ')';else yLabel = seriesData.parameter_name;
							pointFormat = seriesData.parameter_name + ': {point.y}';

							series = {
								tooltip: {
									pointFormat: pointFormat
								},
								showInLegend: false,
								data: seriesData.time_series_data,
								name: seriesData.parameter_name
							};
							graphData.push(series);
						}
				});

				console.log('before all graph data:', graphData);

				//get NOAA forecast values if this is an AHPS Site 
				if (siteList[e.layer.properties.siteID].properties.ahpsID) {
					console.log('Found AHPS site: ', siteList[e.layer.properties.siteID].properties.ahpsID, '  Querying AHPS...');
					var AHPSurl = 'https://water.weather.gov/ahps2/hydrograph_to_xml.php?gage=' + e.layer.properties.ahpsID + '&output=xml';
					console.log('AHPS page url:', AHPSurl);
					var url = './proxy.php?url=';

					//use staging if were in dev mode or on amazon s3
					if (true) {
						url = 'http://staging-ny.water.usgs.gov/maps/go2/proxy.php?url=';
					}

					$.ajax({
						url: url + AHPSurl,
						dataType: 'xml',
						success: function (feedResponse) {

							console.log('Response:', feedResponse);
							var valueArray = [];
							var someValues = false;
							$(feedResponse).find("forecast").find("datum").each(function () {
								var date = $(this).find('valid').text();
								if (!dischargeFlag && $(this).find('primary').attr('name') === 'Stage') {
									var units = $(this).find('primary').attr('units');
									var value = parseFloat($(this).find('primary').text());
									someValues = true;
								}
								//assume discharge
								if (dischargeFlag && $(this).find('secondary').attr('name') === 'Flow') {
									var units = $(this).find('secondary').attr('units');
									var value = parseFloat($(this).find('secondary').text());
									if (units === 'kcfs') value = value * 1000;
									someValues = true;
								}

								//bail if we have nothing
								if (!someValues) return;

								var seconds = new Date(date) / 1;
								valueArray.push([seconds, value]);
							});
							valueArray.sort();

							if (valueArray.length <= 1) {
								console.log('Found an AHPS Site, but no AHPS data was found: ', e.layer.properties.siteID, e.layer.properties.ahpsID);
							}
							//if there is AHPS data, add a new series to the graph
							else {
									var forecastSeries = {
										tooltip: {
											pointFormat: pointFormat
										},
										showInLegend: true,
										color: '#009933',
										name: 'NWS River Forecast (AHPS)',
										data: valueArray
									};
									graphData.push(forecastSeries);
								}

							console.log('Calling showgraph function now...');
							showGraph(graphData, yLabel);
						}
					});
				}

				//if no AHPS data, just show USGS data
				else {
						console.log('Did not find AHPS site for USGS Site: ', e.layer.properties.siteID);
						setTimeout(function () {
							showGraph(graphData, yLabel);
						}, 500);
					}
			});
		}
	}

	function showGraph(graphData, yLabel) {
		console.log('Calling showGraph', graphData);
		//if there is some data, show the div
		$('#graphContainer').show();
		$('#graphLoader').hide();

		Highcharts.setOptions({
			global: { useUTC: false },
			lang: { thousandsSep: ',' }
		});

		var chartSetup = {
			chart: {
				type: 'line',
				spacingTop: 20,
				spacingLeft: 0,
				spacingBottom: 0
			},
			title: {
				text: ''
			},
			credits: {
				enabled: false
			},
			xAxis: {
				type: "datetime",
				labels: {
					formatter: function () {
						return Highcharts.dateFormat('%m/%d', this.value);
					},
					//rotation: 90,
					align: 'center',
					tickInterval: 172800 * 1000
				}
			},
			yAxis: {
				title: { text: yLabel }
			},
			series: graphData
		};

		//type specific overrides
		if (graphData[0].name === 'Discharge') chartSetup.yAxis.type = 'logarithmic';
		if (graphData[0].name === 'Water level, depth LSD') chartSetup.yAxis.reversed = true;

		Highcharts.chart('graphContainer', chartSetup);
	}

	function selectCenter(selectedCenter) {

		selectLayer.clearLayers();
		hullLayer.clearLayers();

		//zoom to center on select
		wscLayer.eachLayer(function (layer) {
			var layers = layer.getLayers();
			$.each(layers, function (index, layer) {
				if (layer.feature.properties.Office === selectedCenter) map.fitBounds(layer.getBounds());
			});
		});

		//populate trip select
		$('#tripSelect').show();
		$.each(tripList, function (index, center) {
			if (center.WSC.OfficeName.indexOf(selectedCenter) !== -1) {
				//append trips to select
				$.each(center.WSC.Trip, function (index, trip) {
					$('#tripSelect').append($('<option></option>').attr('value', trip.TripOwner).text(trip.TripName));
				});
			}
		});
	}

	function selectTrip(tripData) {
		//clear old trip selection
		selectLayer.clearLayers();
		hullLayer.clearLayers();
		hullPoints = [];

		$.each(tripList, function (index, center) {
			if (center.WSC.OfficeName.indexOf(tripData.tripCenter) !== -1) {

				$.each(center.WSC.Trip, function (index, trip) {
					//if we found the selected trip loop over its sites
					if (trip.TripName == tripData.tripName) {
						$.each(trip.Sites, function (index, site) {
							drawSelectHalo('siteslayer', site);
						});
					}
				});
			}
		});

		//get convex hull and zoom to
		if (selectLayer.getLayers().length <= 2) map.fitBounds(selectLayer.getBounds());else getConvexHull(tripData);
	}

	function getConvexHull(tripData) {
		//create convex hull
		var hull = convex(selectLayer.toGeoJSON());
		var hullGeoJSONlayer = L.geoJSON(hull).bindPopup('<b>Center: </b>' + tripData.tripCenter + '</br><b>Trip Name: </b>' + tripData.tripName + '</br><b>Trip Owner: </b>' + tripData.tripOwner, { minWidth: 200 });
		hullLayer.addLayer(hullGeoJSONlayer);

		//zoom map
		map.fitBounds(hullLayer.getBounds());
	}

	function drawSelectHalo(siteLayerId, siteID) {

		var selectIcon = L.icon({ iconUrl: './images/symbols/selected_site_yellow.png', iconSize: [64, 64] });
		$.each(siteList, function (index, site) {
			if (site.properties.siteID === siteID) {
				var haloMarker = L.marker(site.getLatLng(), { icon: selectIcon, pane: 'shadowPane' });
				selectLayer.addLayer(haloMarker);
			}
		});
	}

	function loadWSCboundaries() {
		$.getJSON(subDistGeoJSON, function (data) {
			$.each(data.features, function (index, value) {
				$('#centerSelect').append($('<option></option>').attr('value', value.properties.Office).text(value.properties.Office));
			});
			var myStyle = {
				"color": "#ff8c66",
				"weight": 0,
				"opacity": 0.3
			};
			var geoJSONlayer = L.geoJSON(data, { style: myStyle });
			wscLayer.addLayer(geoJSONlayer);
		});
	}

	function loadSites() {
		var bgIcon = L.icon({ iconUrl: './images/symbols/dot_small.png', iconSize: [8, 8] });

		$.getJSON(siteListJSON, function (data) {
			$.each(data.SitesCollection, function (index, site) {
				//give all sites the default background marker
				siteList[site.SiteID] = L.marker([site.Attributes.latDD, site.Attributes.lonDD], { icon: bgIcon });

				//save its properties
				siteList[site.SiteID].properties = {};
				siteList[site.SiteID].properties.siteID = site.SiteID;
				siteList[site.SiteID].properties.siteName = site.Attributes.station_nm;
				siteList[site.SiteID].properties.siteType = site.Attributes.site_type;
				//set default popup with minimal info
				siteList[site.SiteID].properties.popupContent = '<b>' + site.SiteID + '</b></br></br>' + site.Attributes.station_nm + '</br><a href="https://waterdata.usgs.gov/nwis/inventory/?site_no=' + site.SiteID + '" target="_blank">Access Data</a></br><div id="graphLoader"><p><i class="fa fa-circle-o-notch fa-spin fa-3x fa-fw graph-loader"></i>Loading graph data...</p></div><div id="graphContainer" style="width:100%; height:200px;display:none;"></div>';
				siteList[site.SiteID].bindPopup(siteList[site.SiteID].properties.popupContent, { minWidth: 300 });

				//add to layergroup
				sitesLayer.addLayer(siteList[site.SiteID]);
			});

			loadTrips();
			//initial loadGo2 call
			loadGo2(go2warningsJSON);

			getAHPSids();
		});
	}

	function loadTrips() {
		$.getJSON(tripListJSON, function (data) {
			tripList = data.TripsCollection;
			$.each(tripList, function (index, site) {
				$.each(site, function (index, WSC) {
					$.each(WSC.Trip, function (index, trip) {
						$.each(trip.Sites, function (index, site) {

							//check if site exists in master siteList
							if (siteList[site]) {
								//add trip data to the site object
								siteList[site].properties.tripName = trip.TripName;
								siteList[site].properties.tripOwner = trip.TripOwner;

								//overwrite popup with added trip data
								siteList[site].properties.popupContent = '<b>' + site + '</b></br></br>' + siteList[site].properties.siteName + '</br><a href="https://waterdata.usgs.gov/nwis/inventory/?site_no=' + site + '" target="_blank">Access Data</a></br></br><b>Office: </b>' + WSC.OfficeName + '</br><b>Trip Name: </b>' + siteList[site].properties.tripName + '</br><b>Trip Owner: </b>' + siteList[site].properties.tripOwner + '<div id="graphLoader"><p><i class="fa fa-circle-o-notch fa-spin fa-3x fa-fw graph-loader"></i>Loading graph data...</p></div><div id="graphContainer" style="width:100%; height:200px;display:none;"></div>';

								siteList[site].getPopup().setContent(siteList[site].properties.popupContent);
							} else {
								if (true) console.log('This site does not exist in the master SiteList.json: ', site);
							}
						});
					});
				});
			});
		});
	}

	function toggleGo2() {
		$('#toggleGo2').text(function (i, old) {
			if (old === 'Show Go2Lite') {
				loadGo2(go2liteWarningsJSON);
				return 'Show Go2';
			} else {
				loadGo2(go2warningsJSON);
				return 'Show Go2Lite';
			}
		});
	}

	function selectGo2(method) {

		console.log('in select go2:', method);

		if (method === 'Go2') {
			loadGo2(go2warningsJSON);
			return 'Show Go2';
		}
		if (method === 'Go2Lite') {
			loadGo2(go2liteWarningsJSON);
			return 'Show Go2Lite';
		}
		if (method === 'Go2Fast') {
			loadGo2(go2predictedWarningsJSON);
			return 'Show Go2Fast';
		}
	}

	function loadGo2(go2json) {
		//clear flag layer
		selectLayer.clearLayers();
		hullLayer.clearLayers();

		$.getJSON(go2json, function (data) {
			$('#loading').hide();
			$('#time').html('Data queried: ' + data.metadata.created);

			$.each(siteList, function (index, masterSite) {
				//reset the site popup and icon
				masterSite.getPopup().setContent(masterSite.properties.popupContent);
				var fgIcon = L.icon({ iconUrl: './images/symbols/dot_small.png', iconSize: [8, 8] });
				var go2text = '';
				var go2flags = [];

				//loop of master marker list to find flagged matches
				$.each(data.SitesCollection, function (index, thisWarning) {

					if (masterSite.properties.siteID === thisWarning.items.SiteID) {
						if (!masterSite.properties.tripName) {
							//if (process.env.NODE_ENV === 'development') console.log('This site does not exist in TripList.json: ', masterSite.properties.siteID);
							//$('#noTripSites').append('<li>' + masterSite.properties.siteID + '</li>')
						}

						var sitetype = masterSite.properties.siteType;

						//get array of flags for this site
						for (var item in thisWarning.items.goflags) {

							//skip 1DCP flags temporarily
							//if (thisWarning.items.goflags[item].go2flag != '1DCP') {
							go2text = go2text + '<div class="alert alert-warning"><b>' + thisWarning.items.goflags[item].go2flag + ':</b> ' + thisWarning.items.goflags[item].go2msg + '</div>';

							var thisFlag = thisWarning.items.goflags[item].go2flag;

							//create temporary flag search for 'iGH_meas'
							if (thisWarning.items.goflags[item].go2flag == 'iGH' && thisWarning.items.goflags[item].go2msg.indexOf('meas') != -1) {
								thisFlag = 'iGH_meas';
							}
							go2flags.push(thisFlag);
							//}
						}

						//set the icon based on the flag
						if (searchStringInArray("1DCP", go2flags) != -1 || searchStringInArray("2DCP", go2flags) != -1 || searchStringInArray("1GH", go2flags) != -1 || searchStringInArray("2GH", go2flags) != -1 || searchStringInArray("MODEM", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_red.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_red.png", iconSize: [22, 30] });
						} else if (searchStringInArray("1LRAT", go2flags) != -1 || searchStringInArray("1HRAT", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_orange.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_orange.png", iconSize: [22, 30] });
						} else if (searchStringInArray("2LRAT", go2flags) != -1 || searchStringInArray("2HRAT", go2flags) != -1 || searchStringInArray("2RRAT", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_yellow.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_yellow.png", iconSize: [22, 30] });
						} else if (searchStringInArray("3LRAT", go2flags) != -1 || searchStringInArray("3HRAT", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_green.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_green.png", iconSize: [22, 30] });
						} else if (searchStringInArray("4RAT", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_blue.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_blue.png", iconSize: [22, 30] });
						} else if (searchStringInArray("iGEN", go2flags) != -1 || searchStringInArray("iGH_meas", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_violet.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_violet.png", iconSize: [22, 30] });
						} else if (searchStringInArray("TIME", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_black.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_black.png", iconSize: [22, 30] });
						} else if (searchStringInArray("iWEB", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_brown.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_brown.png", iconSize: [22, 30] });
						} else if (searchStringInArray("iDCP", go2flags) != -1 || searchStringInArray("iGH", go2flags) != -1 || searchStringInArray("SPIKE", go2flags) != -1 || searchStringInArray("3DCP", go2flags) != -1 || searchStringInArray("4DCP", go2flags) != -1 || searchStringInArray("3GH", go2flags) != -1 || searchStringInArray("4GH", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_pink.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_pink.png", iconSize: [22, 30] });
						} else if (searchStringInArray("GAP", go2flags) != -1 || searchStringInArray("SHFT", go2flags) != -1 || searchStringInArray("COMP", go2flags) != -1) {
							if (go2flags.length > 1) fgIcon = L.icon({ iconUrl: "images/symbols/multi_" + sitetype + "_gray.png", iconSize: [42, 40] });else fgIcon = L.icon({ iconUrl: "images/symbols/" + sitetype + "_gray.png", iconSize: [22, 30] });
						}
						//otherwise just bail
						else {
								return;
							}
					}
				});

				//update popup content and icon
				var popupContent = masterSite.getPopup().getContent();
				masterSite.getPopup().setContent(popupContent += '</br>' + go2text);
				masterSite.setIcon(fgIcon);
			});
		});
	}

	function togglePeople() {
		$('#togglePeople').toggleClass('btn-default btn-primary');
		showPeople = !showPeople;
		if (showPeople) {
			//refresh every 30 seconds
			loadPeople();
			refreshIntervalId = setInterval(loadPeople, 30000);
		} else {
			map.removeLayer(peopleLayer);
			clearInterval(refreshIntervalId);
		}
	}

	function loadPeople() {
		//add the layer if it isn't on the map
		if (!map.hasLayer(peopleLayer)) map.addLayer(peopleLayer);

		//get locations
		$.ajax({
			type: "GET",
			contentType: "application/json; charset=utf-8",
			url: trackerURL,
			data: trackerData,
			async: false,
			dataType: "jsonp",
			success: function (json) {

				//make sure there is a response
				if (json.Data && json.Data.length > 0) {

					//if there is a response, clear the people Layer
					peopleLayer.clearLayers();

					$(json.Data).each(function (i, v) {

						//get point info
						var coords = [parseFloat(v.Latitude), parseFloat(v.Longitude)];
						var timeText = v.Date;
						var accuracy = v.Accuracy;
						var speed = v['Speed(mph)'];
						var altitude = v['Altitude(m)'];
						var name = v.DeviceName;
						var color = name.split('-')[1];
						var deviceID = v.DeviceID;

						//get timestamp 
						var dateObj = moment(timeText);
						var formattedDate = dateObj.format('MMMM Do YYYY, h:mm:ss a');

						//convert time to seconds
						var utcSeconds = dateObj.valueOf() / 1000;
						var seconds = new Date().getTime() / 1000;

						//setup marker for person
						var personIcon = L.icon({ iconUrl: './images/person_icons/' + color + '.png', iconSize: [40, 40] });
						var personMarker = L.marker(coords, { icon: personIcon }).bindPopup('<b>User Data</b></br><b>Timestamp:</b> ' + formattedDate + '</br><b>Color:</b> ' + color + '</br><b>Speed(mph):</b> ' + speed + '</br><b>Altitude(m):</b> ' + altitude + '</br><b>Accuracy(m):</b> ' + accuracy);

						//add the graphic only if timestamp hasn't changed in last 36 hours
						if (seconds - utcSeconds < 129600) {
							peopleLayer.addLayer(personMarker);
							console.log("deviceID: ", deviceID, " | color: ", color, " | date: ", formattedDate, " | location: ", coords, " | speed: ", speed, " mph | altitude: ", altitude, " meters | accuracy: ", accuracy, ' meters');
						}

						//otherwise skip showing this user
						else {
								console.log(color, "was skipped for no update.");
							}
					});
				}

				//no response from followMee or other error
				else {
						console.log('Error retreiving user locations');
					}
			},
			error: function (XMLHttpRequest, textStatus, errorThrown) {
				alert('Unexpected error has occurred: ' + XMLHttpRequest.statusText + ' (' + XMLHttpRequest.status + ')');
			}
		});
	}

	function searchStringInArray(str, strArray) {
		for (var j = 0; j < strArray.length; j++) {
			if (strArray[j].match(new RegExp(str, "i"))) return j;
		}
		return -1;
	}

	function setBasemap(baseMap) {

		switch (baseMap) {
			case 'Streets':
				baseMap = 'Streets';break;
			case 'Satellite':
				baseMap = 'Imagery';break;
			case 'Topo':
				baseMap = 'Topographic';break;
			case 'Terrain':
				baseMap = 'Terrain';break;
			case 'Gray':
				baseMap = 'Gray';break;
			case 'NatGeo':
				baseMap = 'NationalGeographic';break;
		}

		if (layer) map.removeLayer(layer);
		layer = __webpack_provided_L_dot_esri.basemapLayer(baseMap);
		map.addLayer(layer);
		if (layerLabels) map.removeLayer(layerLabels);
		if (baseMap === 'Gray' || baseMap === 'Imagery' || baseMap === 'Terrain') {
			layerLabels = __webpack_provided_L_dot_esri.basemapLayer(baseMap + 'Labels');
			map.addLayer(layerLabels);
		}
	}

	function toggleRadar(id) {

		//remove any existing legend img
		$('#NWSlegend').empty();
		$('#radarTimeStamp').empty();

		//remove all layers
		clearRadar();

		if (id == "sr_NWS_layer") {
			//if (map.hasLayer(sr_NWS_layer)) map.removeLayer(sr_NWS_layer);
			map.addLayer(sr_NWS_layer);
			$("#NWSlegend").append("<img id='LegendImg' src='https://radar.weather.gov/ridge/kml/radarkeyimages/ENX_N0R_Legend_0.gif'/>");
		}
		if (id == "lr_NWS_layer") {
			map.addLayer(lr_NWS_layer);
			$("#NWSlegend").append("<img id='LegendImg' src='https://radar.weather.gov/ridge/kml/radarkeyimages/ENX_N0Z_Legend_0.gif'/>");
		}
		if (id == "storm_NWS_layer") {
			map.addLayer(storm_NWS_layer);
			$("#NWSlegend").append("<img id='LegendImg' src='https://radar.weather.gov/ridge/kml/radarkeyimages/ENX_NTP_Legend_0.gif'/>");
		}
		if (id == "reflectivity_NWS_conus_layer") {
			map.addLayer(reflectivity_NWS_conus_layer);
			$("#NWSlegend").append("<img id='LegendImg' src='https://radar.weather.gov/ridge/kml/radarkeyimages/ENX_NCR_Legend_0.gif'/>");
		}
	}

	function clearRadar() {
		$('#NWSlegend').empty();
		$('#radarTimeStamp').empty();
		map.removeLayer(sr_NWS_layer);
		map.removeLayer(lr_NWS_layer);
		map.removeLayer(storm_NWS_layer);
		map.removeLayer(reflectivity_NWS_conus_layer);
	}

	function resetView() {
		//clear select dropdowns
		$("#centerSelect").val($("#centerSelect option:first-child").val());
		$("#tripSelect").find("option:gt(0)").remove();

		//turn people off if they are on
		if ($('#togglePeople').hasClass('btn-primary')) togglePeople();

		//toggle go2 back to main if showing go2lite
		if ($('#toggleGo2').text() == 'Show Go2') toggleGo2();

		//clear any selection graphics
		selectLayer.clearLayers();
		hullLayer.clearLayers();
		clearRadar();

		//clear selected radar
		$('.radarBtn').removeClass('active');

		//reset view
		map.setView([MapY, MapX], 7);
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(2), __webpack_require__(3), __webpack_require__(22), __webpack_require__(30)))

/***/ }),

/***/ 32:
/***/ (function(module, exports) {

	module.exports = "<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <meta name=\"author\" content=\"Martyn Smith - USGS NY WSC\">\r\n\t<link rel=\"copyright\" href=\"license.txt\">\r\n    <title>NY WSC Go2 Mapper</title>\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no\">\r\n    <script src=\"./scripts/vendor.bundle.min.js\"></script>\r\n    <script src=\"./scripts/bundle.min.js\"></script>  \r\n    <script src=\"./appConfig.js\"></script>  \r\n  </head>\r\n  <body>\r\n    \r\n    <div id=\"top-menu\">\r\n            <div id=\"mobile-main-menu\">\r\n                    <span class=\"glyphicon glyphicon-menu-hamburger\" ></span>\r\n                </div>\r\n        <div class=\"title\">\r\n            <a class='top-menu-brand hidden-xs' href=\"https://www.usgs.gov\"><img src=\"images/logo.png\"></a>\r\n            <span class=\"app-name\">NY WSC Go2 Mapper</span><span class=\"app-name-mobile\">USGS NY WSC Go2 Mapper</span> \r\n        </div>\r\n\r\n\r\n        <button id=\"aboutButton\" class=\"btn btn-default top-menu-btn pull-right\">\r\n            <i class=\"glyphicon glyphicon-info-sign\"></i><span class=\"hidden-xs\">&nbsp;&nbsp;About</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div id=\"main-menu\">\r\n        <div class=\"main-menu-container scrollable\">\r\n            <div class=\"menu-content\"> \r\n                <div class=\"scrollable-content\">\r\n\r\n                    <div class=\"panel-group\" id=\"accordion\">\r\n                        <div class=\"panel panel-default sidebar-panel\">\r\n                            <div class=\"panel-heading\">\r\n                                <h4 class=\"panel-title\">\r\n                                    <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#optionsPanel\">\r\n                                        Options\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"optionsPanel\" class=\"panel-collapse collapse in\" aria-labelledby=\"optionsHeader\">\r\n                                <div class=\"panel-body collapse in\">\r\n\r\n                                    <span id=\"loading\"><img src=\"./images/loading_black.gif\" /></span>\r\n\r\n                                    <div id=\"time\" style=\"font-size:small;padding-bottom:6px;\">Data queried: loading date...</div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <select class=\"form-control\" id=\"centerSelect\">\r\n                                            <option selected=\"selected\" value=\"default\">Select an office</option>\r\n                                        </select> \r\n                                    </div>\r\n\r\n                                    <div class=\"form-group\">\r\n                                        <select class=\"form-control\" id=\"tripSelect\" style=\"display:none;\">\r\n                                            <option selected=\"selected\" value=\"default\">Select a trip</option>\r\n                                        </select> \r\n                                    </div>\r\n\r\n                                    <div style=\"font-size:small;padding-bottom:6px;\">Select Go2 Type:</div>\r\n                                    <div class=\"form-group\">\r\n                                        <select class=\"form-control\" id=\"go2typeSelect\">\r\n                                            <option selected=\"selected\" value=\"full\">Go2</option>\r\n                                            <option value=\"lite\">Go2Lite</option>\r\n                                            <option value=\"fast\">Go2Fast</option>\r\n                                        </select> \r\n                                    </div>\r\n<!-- \r\n                                    <button type=\"button\" class=\"btn btn-default btn-block\" id=\"toggleGo2\">Show Go2Lite</button> -->\r\n                                    <button type=\"button\" class=\"btn btn-default btn-block\" id=\"togglePeople\">Show People</button>\r\n                                    <button type=\"button\" class=\"btn btn-default btn-block\" id=\"resetView\" >Reset</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"panel panel-default sidebar-panel\">\r\n                            <div class=\"panel-heading\">\r\n                                <h4 class=\"panel-title\">\r\n                                    <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#layersPanel\">\r\n                                        Legend\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"layersPanel\" class=\"panel-collapse collapse\">\r\n                                <div class=\"panel-body\">\r\n        \r\n                                    <div id=\"legend\" style=\"display:block;\">\r\n                                        <TABLE BORDER=\"0\" CELLSPACING=\"0\" CELLPADDING=\"2\" style=\"font-size:small;padding-bottom:6px;padding-top:6px;\">\r\n                                        <TR>\r\n                                            <TD><img src=\"images/symbols/sw_symbol.png\" alt=\"Red\" /></TD>\r\n                                            <TD>Surface water</TD>\r\n                                            <TD><img src=\"images/symbols/gw_symbol.png\" alt=\"Red\" /></TD>\r\n                                            <TD>Groundwater</TD>\r\n                                        </TR>\r\n                                        <TR>\r\n                                            <TD><img src=\"images/symbols/at_symbol.png\" alt=\"Red\" /></TD>\r\n                                            <TD>Atmospheric</TD>\r\n                                            <TD><img src=\"images/symbols/ot_symbol.png\" alt=\"Red\" /></TD>\r\n                                            <TD>Other</TD>\r\n                                        </TR>\r\n                                        </TABLE>\r\n                                        <br>\r\n                                        <TABLE BORDER=\"0\" CELLSPACING=\"0\" CELLPADDING=\"1\" style=\"font-size:small;\">\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/red.png\" alt=\"Red\" /></TD>\r\n                                                <TD>xDCP, xGH, MODEM (x=1,2) </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/orange.png\" alt=\"Orange\" /></TD>\r\n                                                <TD>1xRAT (x=l,h) </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/yellow.png\" alt=\"Yellow\" /></TD>\r\n                                                <TD>2xRAT (x=l,h,r) </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/green.png\" alt=\"Green\" /></TD>\r\n                                                <TD>3xRAT (x=l,h) </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/blue.png\" alt=\"Blue\" /></TD>\r\n                                                <TD>4RAT </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/violet.png\" alt=\"Violet\" /></TD>\r\n                                                <TD>iGEN </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/black.png\" alt=\"Black\" /></TD>\r\n                                                <TD>xTIME (x=1,2,3,4) </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/brown.png\" alt=\"Brown\" /></TD>\r\n                                                <TD>iWEB </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/pink.png\" alt=\"Pink\" /></TD>\r\n                                                <TD>xDCP, xGH, SPIKE (x=3,4,i)</TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/gray.png\" alt=\"Gray\" /></TD>\r\n                                                <TD>xGAP (x=2,3,4,5), xSHFT (x=3,4,5,6), iCOMP </TD>\r\n                                            </TR>\r\n                                            <TR>\r\n                                                <TD><img src=\"images/symbols/multi_gray.png\" alt=\"Gray\" /></TD>\r\n                                                <TD>Multiple flags, color represents most severe flag. </TD>\r\n                                            </TR>\r\n                                        </TABLE>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"panel panel-default sidebar-panel\">\r\n                            <div class=\"panel-heading\">\r\n                                <h4 class=\"panel-title\">\r\n                                    <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#weatherPanel\">\r\n                                        NOAA Weather Layers\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"weatherPanel\" class=\"panel-collapse collapse\">\r\n                                <div class=\"panel-body\">\r\n                                    <button value=\"reflectivity_NWS_conus_layer\" class=\"btn btn-default slick-btn radarBtn equalize\">US Mosaic</button>\r\n                                    <button value=\"lr_NWS_layer\" class=\"btn btn-default slick-btn radarBtn equalize\">Long Range</button>\r\n                                    <button value=\"sr_NWS_layer\" class=\"btn btn-default slick-btn radarBtn equalize\">Short Range</button>\r\n                                    <button value=\"storm_NWS_layer\" class=\"btn btn-default slick-btn radarBtn equalize\">Storm Total</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"panel panel-default sidebar-panel\">\r\n                            <div class=\"panel-heading\">\r\n                                <h4 class=\"panel-title\">\r\n                                    <a class=\"accordion-toggle\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#basemapsPanel\">\r\n                                        Basemaps\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"basemapsPanel\" class=\"panel-collapse collapse\">\r\n                                <div class=\"panel-body\">\r\n                                    <button id=\"btnStreets\" class=\"btn btn-default slick-btn basemapBtn equalize\"><img class=\"basemapThumb\" alt=\"\" src=\"images/streets.jpg\"><br class=\"basemapThumb\">Streets</button>\r\n                                    <button id=\"btnSatellite\" class=\"btn btn-default slick-btn basemapBtn equalize\" ><img class=\"basemapThumb\" alt=\"\" src=\"images/satellite.jpg\"><br class=\"basemapThumb\">Satellite</button>\r\n                                    <button id=\"btnTopo\" class=\"btn btn-default slick-btn basemapBtn equalize\"><img class=\"basemapThumb\" alt=\"\" src=\"images/topo.jpg\"><br class=\"basemapThumb\">Topo</button>\r\n                                    <button id=\"btnTerrain\" class=\"btn btn-default slick-btn basemapBtn equalize\"><img class=\"basemapThumb\" alt=\"\" src=\"images/terrain.jpg\"><br class=\"basemapThumb\">Terrain</button>\r\n                                    <button id=\"btnGray\" class=\"btn btn-default slick-btn basemapBtn equalize slick-btn-selection\" ><img class=\"basemapThumb\" alt=\"\" src=\"images/gray.jpg\"><br class=\"basemapThumb\">Gray</button>\r\n                                    <button id=\"btnNatGeo\" class=\"btn btn-default slick-btn basemapBtn equalize\"><img class=\"basemapThumb\" alt=\"\" src=\"images/natgeo.jpg\"><br class=\"basemapThumb\">NatGeo</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"info\" class=\"identification pull-right\">Developed by USGS NY WSC</div>\r\n\r\n                    <div class=\"footer-links\">\r\n                        <!-- footer nav links -->\r\n                        <a href=\"https://www.doi.gov/privacy\">DOI Privacy Policy</a>\r\n                        <a href=\"https://www.usgs.gov/laws/policies_notices.html\">Legal</a>\r\n                        <a href=\"https://www2.usgs.gov/laws/accessibility.html\">Accessibility</a>\r\n                        <a href=\"https://www.usgs.gov/sitemap.html\">Site Map</a>\r\n                        <a href=\"https://answers.usgs.gov/\">Contact USGS</a>\r\n                        <!--/ footer nav links -->      \r\n                    </div>\r\n\r\n                    <div class=\"footer-links\">\r\n                        <!-- footer nav links -->\r\n                        <a href=\"https://www.doi.gov/\">U.S. Department of the Interior</a>\r\n                        <a href=\"https://www.doioig.gov/\">DOI Inspector General</a>\r\n                        <a href=\"https://www.whitehouse.gov/\">White House</a>\r\n                        <a href=\"https://www.whitehouse.gov/omb/e-gov/\">E-gov</a>\r\n                        <a href=\"https://www.whitehouse.gov/open\">Open Government</a>\r\n                        <a href=\"https://www.doi.gov/pmb/eeo/no-fear-act\">No Fear Act</a>\r\n                        <a href=\"https://www2.usgs.gov/foia\">FOIA</a>\r\n                        <!--/ footer nav links -->      \r\n                    </div>\r\n\r\n                    <!-- .footer-social-links -->\r\n                    <div class=\"footer-links\">\r\n                        <a href=\"https://twitter.com/usgs\" target=\"_blank\">\r\n                            <i class=\"fa fa-twitter-square\"><span class=\"only\">Twitter</span></i>\r\n                        </a>\r\n                        <a href=\"https://facebook.com/usgeologicalsurvey\" target=\"_blank\">\r\n                            <i class=\"fa fa-facebook-square\"><span class=\"only\">Facebook</span></i>\r\n                        </a>\r\n                        <a href=\"https://plus.google.com/112624925658443863798/posts\" target=\"_blank\">\r\n                            <i class=\"fa fa-google-plus-square\"><span class=\"only\">Google+</span></i>\r\n                        </a>\r\n                        <a href=\"https://github.com/usgs\" target=\"_blank\">\r\n                            <i class=\"fa fa-github\"><span class=\"only\">GitHub</span></i>\r\n                        </a>\r\n\r\n                        <a href=\"https://flickr.com/usgeologicalsurvey\" target=\"_blank\">\r\n                            <i class=\"fa fa-flickr\"><span class=\"only\">Flickr</span></i>\r\n                        </a>\r\n\r\n                        <a href=\"http://youtube.com/usgs\" target=\"_blank\">\r\n                            <i class=\"fa fa-youtube-play\"><span class=\"only\">YouTube</span></i>\r\n                        </a>\r\n                        <a href=\"https://instagram.com/usgs\" target=\"_blank\">\r\n                            <i class=\"fa fa-instagram\"><span class=\"only\">Instagram</span></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div id=\"aboutModal\" class=\"modal fade\"  tabindex=\"-1\" role=\"dialog\" >\r\n            <div class=\"modal-dialog  modal-lg\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-hidden=\"true\" style=\"color:gray;\">&times;</button>\r\n                        <h4 class=\"modal-title\">NY WSC Go2 Mapper</h4>\r\n                    </div>\r\n                    <div id=\"aboutModalBody\" class=\"modal-body\">\r\n                        <ul class=\"nav nav-tabs\" id=\"aboutModalTabs\">\r\n                            <li role=\"presentation\" class=\"active\"><a id=\"aboutTab\" href=\"#aboutTabPane\" data-toggle=\"tab\"><i class=\"fa fa-question-circle\"></i>&nbsp;About the application</a></li>\r\n                            <li role=\"presentation\"><a id=\"disclaimerTab\" href=\"#disclaimerTabPane\" data-toggle=\"tab\"><i class=\"fa fa-exclamation-circle\"></i>&nbsp;Disclaimer</a></li>\r\n                        </ul>\r\n                        <div class=\"tab-content\">\r\n                            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"aboutTabPane\"><br>\r\n                                <p>Interactive web mapping application used to display Go2 warning messages and field personnel locations. The Go2 system is used by USGS staff to monitor the maintenance of USGS gages.</p>\r\n\r\n                                <h4>Suggested Citation</h4>\r\n\r\n                                <p>Smith, M.J., Go2 Mapper Web Application, <a href=\"https://doi.org/10.5066/F7R210PG\" target=\"_blank\">https://doi.org/10.5066/F7R210PG</a>.</p>\r\n\r\n                                <p>Developed by <a href=\"https://www.usgs.gov/staff-profiles/martyn-smith\">Martyn Smith</a> and <a href=\"https://www.usgs.gov/staff-profiles/todd-siskin\">Todd Siskin</a> of the <a href=\"https://ny.water.usgs.gov\">NY WSC</a>.<br>\r\n                                Portions of this application were developed in conjuction with <a href=\"https://wim.usgs.gov\" target=\"_blank\">Web Informatics and Mapping (WiM).</a><br>Source code available <a href=\"https://github.com/marsmith/go2mapper\">here.</a><br>\r\n                                Icons created by David McCulloch, USGS</p>\r\n                                <span id=\"appVersion\"></span>\r\n                            </div>\r\n                            <div role=\"tabpanel\" class=\"tab-pane\" id=\"disclaimerTabPane\"><br>\r\n                                <h4>USGS Software User Rights Notice</h4>\r\n                                <p>Software and related material (data and (or) documentation), contained in or furnished in connection with a software distribution, are made available by the U.S. Geological Survey (USGS) to be used in the public interest and in the advancement of science, subject to the following restrictions and understandings.</p>\r\n                                  \r\n                                <p>Because the software and related material are free and provided \"as is,\" the authors, the USGS, and the United States Government have made no warranty, express or implied, as to accuracy or completeness and are not obligated to provide the user with any support, consulting, training or assistance of any kind with regard to the use, operation, and performance of this software nor to provide the user with any updates, revisions, new versions or \"bug fixes\".</p>\r\n                                  \r\n                                <p>The user assumes all risk for any damages whatsoever resulting from loss of use, data, or profits arising in connection with the access, use, quality, or performance of this software.</p>\t\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--<div class=\"modal-footer\">\r\n                    </div>-->\r\n                </div><!-- /.modal-content -->\r\n            </div> <!-- /.modal-dialog -->\r\n        </div><!-- /.modal -->\r\n\r\n    <div id=\"mapDiv\">\r\n        <div id=\"NWSlegend\"></div>\r\n        <div id=\"radarTimeStamp\" style=\"font-size:x-small;\"></div>\r\n    </div>\r\n\r\n  </body>\r\n</html>"

/***/ })

});